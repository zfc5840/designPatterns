地址：http://blog.csdn.net/zhengzhb/article/details/7278174/
定义：不要存在多于一个导致类变更的原因。通俗的说，即一个类（一个类的方法）只负责一项职责。
问题由来：类T负责两个不同的职责：职责P1，职责P2。当由于职责P1需求发生改变而需要修改类T时，有可能会导致原本运行正常的职责P2功能发生故障。
解决方案：遵循单一职责原则。分别建立两个类T1、T2，使T1完成职责P1功能，T2完成职责P2功能。这样，当修改类T1时，不会使职责P2发生故障风险；同理，当修改T2时，也不会使职责P1发生故障风险。


地址：http://m.blog.csdn.net/blog/shaopeng5211/8899179
里氏替换原则：父类一定适合子类，而子类不一定适合父类。



地址：http://m.blog.csdn.net/blog/shaopeng5211/8904738
依赖倒置原则：就是Spring中使用的依赖倒置，即抽象层不应该依赖细节，而是细节依赖抽象层，高层不依赖底层，而是两者都依赖抽象层。


地址：http://blog.csdn.net/zhengzhb/article/details/7296921
接口隔离原则：建立单一接口，不要建立庞大臃肿的接口，尽量细化接口，接口中的方法尽量少。也就是说，我们要为各个类建立专用的接口，而不要试图去建立一个很庞大的接口供所有依赖它的类去调用。

地址：http://m.blog.csdn.net/blog/shaopeng5211/8890113
开放关闭原则：即对扩张开放，对修改关闭

地址：http://m.blog.csdn.net/blog/shaopeng5211/8904769
迪米特原则：一个对象尽可能对另一个对象了解，如果一个类调用另一个类的方法，可以通过第三者。